{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/.pnpm/@clerk+nextjs@6.2.0_next@15.0.2_react-dom@19.0.0-rc-02c0e824-20241028_react@19.0.0-rc-02c0e82_ge3lh3absj2brzrax3pfndyaau/node_modules/@clerk/nextjs/src/utils/logFormatter.ts"],"sourcesContent":["import type { LogEntry } from './debugLogger';\n\n// Move to shared once clerk/shared is used in clerk/nextjs\nconst maskSecretKey = (str: any) => {\n  if (!str || typeof str !== 'string') {\n    return str;\n  }\n\n  try {\n    return (str || '').replace(/^(sk_(live|test)_)(.+?)(.{3})$/, '$1*********$4');\n  } catch (e) {\n    return '';\n  }\n};\n\nexport const logFormatter = (entry: LogEntry) => {\n  return (Array.isArray(entry) ? entry : [entry])\n    .map(entry => {\n      if (typeof entry === 'string') {\n        return maskSecretKey(entry);\n      }\n\n      const masked = Object.fromEntries(Object.entries(entry).map(([k, v]) => [k, maskSecretKey(v)]));\n      return JSON.stringify(masked, null, 2);\n    })\n    .join(', ');\n};\n"],"names":["entry"],"mappings":";;;AAGA,MAAM,gBAAgB,CAAC,QAAa;IAClC,IAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;QACnC,OAAO;IACT;IAEA,IAAI;QACF,OAAA,CAAQ,OAAO,EAAA,EAAI,OAAA,CAAQ,kCAAkC,eAAe;IAC9E,EAAA,OAAS,GAAG;QACV,OAAO;IACT;AACF;AAEO,MAAM,eAAe,CAAC,UAAoB;IAC/C,OAAA,CAAQ,MAAM,OAAA,CAAQ,KAAK,IAAI,QAAQ;QAAC,KAAK;KAAA,EAC1C,GAAA,CAAI,CAAAA,WAAS;QACZ,IAAI,OAAOA,WAAU,UAAU;YAC7B,OAAO,cAAcA,MAAK;QAC5B;QAEA,MAAM,SAAS,OAAO,WAAA,CAAY,OAAO,OAAA,CAAQA,MAAK,EAAE,GAAA,CAAI,CAAC,CAAC,GAAG,CAAC,CAAA,GAAM;gBAAC;gBAAG,cAAc,CAAC,CAAC;aAAC,CAAC;QAC9F,OAAO,KAAK,SAAA,CAAU,QAAQ,MAAM,CAAC;IACvC,CAAC,EACA,IAAA,CAAK,IAAI;AACd","ignoreList":[0]}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/.pnpm/@clerk+nextjs@6.2.0_next@15.0.2_react-dom@19.0.0-rc-02c0e824-20241028_react@19.0.0-rc-02c0e82_ge3lh3absj2brzrax3pfndyaau/node_modules/@clerk/nextjs/src/utils/debugLogger.ts"],"sourcesContent":["// TODO: Replace with a more sophisticated logging solution\n\nimport nextPkg from 'next/package.json';\n\nimport { logFormatter } from './logFormatter';\n\nexport type Log = string | Record<string, unknown>;\nexport type LogEntry = Log | Log[];\nexport type Logger<L = Log> = {\n  commit: () => void;\n  debug: (...args: Array<L | (() => L)>) => void;\n  enable: () => void;\n};\nexport type LoggerNoCommit<L = Logger> = Omit<L, 'commit'>;\n\nexport const createDebugLogger = (name: string, formatter: (val: LogEntry) => string) => (): Logger => {\n  const entries: LogEntry[] = [];\n  let isEnabled = false;\n\n  return {\n    enable: () => {\n      isEnabled = true;\n    },\n    debug: (...args) => {\n      if (isEnabled) {\n        entries.push(args.map(arg => (typeof arg === 'function' ? arg() : arg)));\n      }\n    },\n    commit: () => {\n      if (isEnabled) {\n        console.log(debugLogHeader(name));\n\n        /**\n         * We buffer each collected log entry so we can format them and log them all at once.\n         * Individual console.log calls are used to ensure we don't hit platform-specific log limits (Vercel and Netlify are 4kb).\n         */\n        for (const log of entries) {\n          let output = formatter(log);\n\n          output = output\n            .split('\\n')\n            .map(l => `  ${l}`)\n            .join('\\n');\n\n          // Vercel errors if the output is > 4kb, so we truncate it\n          if (process.env.VERCEL) {\n            output = truncate(output, 4096);\n          }\n\n          console.log(output);\n        }\n\n        console.log(debugLogFooter(name));\n      }\n    },\n  };\n};\n\ntype WithLogger = <L extends Logger, H extends (...args: any[]) => any>(\n  loggerFactoryOrName: string | (() => L),\n  handlerCtor: (logger: LoggerNoCommit<L>) => H,\n) => H;\n\nexport const withLogger: WithLogger = (loggerFactoryOrName, handlerCtor) => {\n  return ((...args: any) => {\n    const factory =\n      typeof loggerFactoryOrName === 'string'\n        ? createDebugLogger(loggerFactoryOrName, logFormatter)\n        : loggerFactoryOrName;\n\n    const logger = factory();\n    const handler = handlerCtor(logger as any);\n\n    try {\n      const res = handler(...args);\n      if (typeof res === 'object' && 'then' in res && typeof res.then === 'function') {\n        return res\n          .then((val: any) => {\n            logger.commit();\n            return val;\n          })\n          .catch((err: any) => {\n            logger.commit();\n            throw err;\n          });\n      }\n      // handle sync methods\n      logger.commit();\n      return res;\n    } catch (err: any) {\n      logger.commit();\n      throw err;\n    }\n  }) as ReturnType<typeof handlerCtor>;\n};\n\nfunction debugLogHeader(name: string) {\n  return `[clerk debug start: ${name}]`;\n}\n\nfunction debugLogFooter(name: string) {\n  return `[clerk debug end: ${name}] (@clerk/nextjs=${PACKAGE_VERSION},next=${nextPkg.version})`;\n}\n\n// ref: https://stackoverflow.com/questions/57769465/javascript-truncate-text-by-bytes-length\nfunction truncate(str: string, maxLength: number) {\n  const encoder = new TextEncoder();\n  const decoder = new TextDecoder('utf-8');\n\n  const encodedString = encoder.encode(str);\n  const truncatedString = encodedString.slice(0, maxLength);\n\n  // return the truncated string, removing any replacement characters that result from partially truncated characters\n  return decoder.decode(truncatedString).replace(/\\uFFFD/g, '');\n}\n"],"names":[],"mappings":";;;;AAEA,OAAO,aAAa;AAEpB,SAAS,oBAAoB;;;AAWtB,MAAM,oBAAoB,CAAC,MAAc,YAAyC,MAAc;QACrG,MAAM,UAAsB,CAAC,CAAA;QAC7B,IAAI,YAAY;QAEhB,OAAO;YACL,QAAQ,MAAM;gBACZ,YAAY;YACd;YACA,OAAO,CAAA,GAAI,SAAS;gBAClB,IAAI,WAAW;oBACb,QAAQ,IAAA,CAAK,KAAK,GAAA,CAAI,CAAA,MAAQ,OAAO,QAAQ,aAAa,IAAI,IAAI,GAAI,CAAC;gBACzE;YACF;YACA,QAAQ,MAAM;gBACZ,IAAI,WAAW;oBACb,QAAQ,GAAA,CAAI,eAAe,IAAI,CAAC;oBAMhC,KAAA,MAAW,OAAO,QAAS;wBACzB,IAAI,SAAS,UAAU,GAAG;wBAE1B,SAAS,OACN,KAAA,CAAM,IAAI,EACV,GAAA,CAAI,CAAA,IAAK,CAAA,EAAA,EAAK,CAAC,EAAE,EACjB,IAAA,CAAK,IAAI;wBAGZ,IAAI,QAAQ,GAAA,CAAI,MAAA,EAAQ;4BACtB,SAAS,SAAS,QAAQ,IAAI;wBAChC;wBAEA,QAAQ,GAAA,CAAI,MAAM;oBACpB;oBAEA,QAAQ,GAAA,CAAI,eAAe,IAAI,CAAC;gBAClC;YACF;QACF;IACF;AAOO,MAAM,aAAyB,CAAC,qBAAqB,gBAAgB;IAC1E,OAAQ,CAAA,GAAI,SAAc;QACxB,MAAM,UACJ,OAAO,wBAAwB,WAC3B,kBAAkB,+YAAqB,eAAY,IACnD;QAEN,MAAM,SAAS,QAAQ;QACvB,MAAM,UAAU,YAAY,MAAa;QAEzC,IAAI;YACF,MAAM,MAAM,QAAQ,GAAG,IAAI;YAC3B,IAAI,OAAO,QAAQ,YAAY,UAAU,OAAO,OAAO,IAAI,IAAA,KAAS,YAAY;gBAC9E,OAAO,IACJ,IAAA,CAAK,CAAC,QAAa;oBAClB,OAAO,MAAA,CAAO;oBACd,OAAO;gBACT,CAAC,EACA,KAAA,CAAM,CAAC,QAAa;oBACnB,OAAO,MAAA,CAAO;oBACd,MAAM;gBACR,CAAC;YACL;YAEA,OAAO,MAAA,CAAO;YACd,OAAO;QACT,EAAA,OAAS,KAAU;YACjB,OAAO,MAAA,CAAO;YACd,MAAM;QACR;IACF;AACF;AAEA,SAAS,eAAe,IAAA,EAAc;IACpC,OAAO,CAAA,oBAAA,EAAuB,IAAI,CAAA,CAAA,CAAA;AACpC;AAEA,SAAS,eAAe,IAAA,EAAc;IACpC,OAAO,CAAA,kBAAA,EAAqB,IAAI,CAAA,iBAAA,EAAoB,OAAe,CAAA,MAAA,mUAAS,UAAA,CAAQ,OAAO,CAAA,CAAA,CAAA;AAC7F;AAGA,SAAS,SAAS,GAAA,EAAa,SAAA,EAAmB;IAChD,MAAM,UAAU,IAAI,YAAY;IAChC,MAAM,UAAU,IAAI,YAAY,OAAO;IAEvC,MAAM,gBAAgB,QAAQ,MAAA,CAAO,GAAG;IACxC,MAAM,kBAAkB,cAAc,KAAA,CAAM,GAAG,SAAS;IAGxD,OAAO,QAAQ,MAAA,CAAO,eAAe,EAAE,OAAA,CAAQ,WAAW,EAAE;AAC9D","ignoreList":[0]}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/.pnpm/@clerk+nextjs@6.2.0_next@15.0.2_react-dom@19.0.0-rc-02c0e824-20241028_react@19.0.0-rc-02c0e82_ge3lh3absj2brzrax3pfndyaau/node_modules/@clerk/nextjs/src/constants.ts"],"sourcesContent":["const Headers = {\n  NextRewrite: 'x-middleware-rewrite',\n  NextResume: 'x-middleware-next',\n  NextRedirect: 'Location',\n  // Used by next to identify internal navigation for app router\n  NextUrl: 'next-url',\n  NextAction: 'next-action',\n  // Used by next to identify internal navigation for pages router\n  NextjsData: 'x-nextjs-data',\n} as const;\n\nexport const constants = {\n  Headers,\n} as const;\n"],"names":[],"mappings":";;;AAAA,MAAM,UAAU;IACd,aAAa;IACb,YAAY;IACZ,cAAc;IAAA,8DAAA;IAEd,SAAS;IACT,YAAY;IAAA,gEAAA;IAEZ,YAAY;AACd;AAEO,MAAM,YAAY;IACvB;AACF","ignoreList":[0]}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/.pnpm/@clerk+nextjs@6.2.0_next@15.0.2_react-dom@19.0.0-rc-02c0e824-20241028_react@19.0.0-rc-02c0e82_ge3lh3absj2brzrax3pfndyaau/node_modules/@clerk/nextjs/src/server/constants.ts"],"sourcesContent":["import { apiUrlFromPublishableKey } from '@clerk/shared/apiUrlFromPublishableKey';\nimport { isTruthy } from '@clerk/shared/underscore';\n\nexport const CLERK_JS_VERSION = process.env.NEXT_PUBLIC_CLERK_JS_VERSION || '';\nexport const CLERK_JS_URL = process.env.NEXT_PUBLIC_CLERK_JS_URL || '';\nexport const API_VERSION = process.env.CLERK_API_VERSION || 'v1';\nexport const SECRET_KEY = process.env.CLERK_SECRET_KEY || '';\nexport const PUBLISHABLE_KEY = process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || '';\nexport const ENCRYPTION_KEY = process.env.CLERK_ENCRYPTION_KEY || '';\nexport const API_URL = process.env.CLERK_API_URL || apiUrlFromPublishableKey(PUBLISHABLE_KEY);\nexport const DOMAIN = process.env.NEXT_PUBLIC_CLERK_DOMAIN || '';\nexport const PROXY_URL = process.env.NEXT_PUBLIC_CLERK_PROXY_URL || '';\nexport const IS_SATELLITE = isTruthy(process.env.NEXT_PUBLIC_CLERK_IS_SATELLITE) || false;\nexport const SIGN_IN_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || '';\nexport const SIGN_UP_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || '';\nexport const SDK_METADATA = {\n  name: PACKAGE_NAME,\n  version: PACKAGE_VERSION,\n  environment: process.env.NODE_ENV,\n};\n\nexport const TELEMETRY_DISABLED = isTruthy(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DISABLED);\nexport const TELEMETRY_DEBUG = isTruthy(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DEBUG);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAAS,gCAAgC;AACzC,SAAS,gBAAgB;;;;;AAElB,MAAM,mBAAmB,QAAQ,GAAA,CAAI,4BAAA,IAAgC;AACrE,MAAM,eAAe,QAAQ,GAAA,CAAI,wBAAA,IAA4B;AAC7D,MAAM,cAAc,QAAQ,GAAA,CAAI,iBAAA,IAAqB;AACrD,MAAM,aAAa,QAAQ,GAAA,CAAI,gBAAA,IAAoB;AACnD,MAAM,kBAAkB,QAAQ,IAAI,oFAAqC;AACzE,MAAM,iBAAiB,QAAQ,GAAA,CAAI,oBAAA,IAAwB;AAC3D,MAAM,UAAU,QAAQ,GAAA,CAAI,aAAA,qXAAiB,2BAAA,EAAyB,eAAe;AACrF,MAAM,SAAS,QAAQ,GAAA,CAAI,wBAAA,IAA4B;AACvD,MAAM,YAAY,QAAQ,GAAA,CAAI,2BAAA,IAA+B;AAC7D,MAAM,eAAe,4XAAA,EAAS,QAAQ,GAAA,CAAI,8BAA8B,KAAK;AAC7E,MAAM,cAAc,QAAQ,GAAA,CAAI,6BAAA,IAAiC;AACjE,MAAM,cAAc,QAAQ,GAAA,CAAI,6BAAA,IAAiC;AACjE,MAAM,eAAe;IAC1B,MAAM;IACN,SAAS;IACT,WAAA,EAAa,QAAQ,IAAI;AAC3B;AAEO,MAAM,sYAAqB,WAAA,EAAS,QAAQ,GAAA,CAAI,oCAAoC;AACpF,MAAM,mYAAkB,WAAA,EAAS,QAAQ,GAAA,CAAI,iCAAiC","ignoreList":[0]}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/.pnpm/@clerk+nextjs@6.2.0_next@15.0.2_react-dom@19.0.0-rc-02c0e824-20241028_react@19.0.0-rc-02c0e82_ge3lh3absj2brzrax3pfndyaau/node_modules/@clerk/nextjs/src/server/errors.ts"],"sourcesContent":["export const missingDomainAndProxy = `\nMissing domain and proxyUrl. A satellite application needs to specify a domain or a proxyUrl.\n\n1) With middleware\n   e.g. export default clerkMiddleware({domain:'YOUR_DOMAIN',isSatellite:true});\n2) With environment variables e.g.\n   NEXT_PUBLIC_CLERK_DOMAIN='YOUR_DOMAIN'\n   NEXT_PUBLIC_CLERK_IS_SATELLITE='true'\n   `;\n\nexport const missingSignInUrlInDev = `\nInvalid signInUrl. A satellite application requires a signInUrl for development instances.\nCheck if signInUrl is missing from your configuration or if it is not an absolute URL\n\n1) With middleware\n   e.g. export default clerkMiddleware({signInUrl:'SOME_URL', isSatellite:true});\n2) With environment variables e.g.\n   NEXT_PUBLIC_CLERK_SIGN_IN_URL='SOME_URL'\n   NEXT_PUBLIC_CLERK_IS_SATELLITE='true'`;\n\nexport const getAuthAuthHeaderMissing = () => authAuthHeaderMissing('getAuth');\n\nexport const authAuthHeaderMissing = (helperName = 'auth') =>\n  `Clerk: ${helperName}() was called but Clerk can't detect usage of clerkMiddleware(). Please ensure the following:\n-  clerkMiddleware() is used in your Next.js Middleware.\n- Your Middleware matcher is configured to match this route or page.\n- If you are using the src directory, make sure the Middleware file is inside of it.\n\nFor more details, see https://clerk.com/docs/quickstarts/nextjs\n`;\n\nexport const clockSkewDetected = (verifyMessage: string) =>\n  `Clerk: Clock skew detected. This usually means that your system clock is inaccurate. Clerk will continuously try to issue new tokens, as the existing ones will be treated as \"expired\" due to clock skew.\n\nTo resolve this issue, make sure your system's clock is set to the correct time (e.g. turn off and on automatic time synchronization).\n\n---\n\n${verifyMessage}`;\n\nexport const authSignatureInvalid = `Clerk: Unable to verify request, this usually means the Clerk middleware did not run. Ensure Clerk's middleware is properly integrated and matches the current route. For more information, see: https://clerk.com/docs/references/nextjs/clerk-middleware. (code=auth_signature_invalid)`;\n\nexport const encryptionKeyInvalid = `Clerk: Unable to decrypt request data, this usually means the encryption key is invalid. Ensure the encryption key is properly set. For more information, see: https://clerk.com/docs/references/nextjs/clerk-middleware#dynamic-keys. (code=encryption_key_invalid)`;\n"],"names":[],"mappings":";;;;;;;;;AAAO,MAAM,wBAAwB,CAAA;;;;;;;;GAAA,CAAA;AAU9B,MAAM,wBAAwB,CAAA;;;;;;;;wCAAA,CAAA;AAU9B,MAAM,2BAA2B,IAAM,sBAAsB,SAAS;AAEtE,MAAM,wBAAwB,CAAC,aAAa,MAAA,GACjD,CAAA,OAAA,EAAU,UAAU,CAAA;;;;;;AAAA,CAAA;AAQf,MAAM,oBAAoB,CAAC,gBAChC,CAAA;;;;;;AAAA,EAMA,aAAa,EAAA;AAER,MAAM,uBAAuB,CAAA,yRAAA,CAAA;AAE7B,MAAM,uBAAuB,CAAA,oQAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/.pnpm/@clerk+nextjs@6.2.0_next@15.0.2_react-dom@19.0.0-rc-02c0e824-20241028_react@19.0.0-rc-02c0e82_ge3lh3absj2brzrax3pfndyaau/node_modules/@clerk/nextjs/src/server/errorThrower.ts"],"sourcesContent":["import { buildErrorThrower } from '@clerk/shared/error';\n\nexport const errorThrower = buildErrorThrower({ packageName: '@clerk/nextjs' });\n"],"names":[],"mappings":";;;;AAAA,SAAS,yBAAyB;;AAE3B,MAAM,gYAAe,oBAAA,EAAkB;IAAE,aAAa;AAAgB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/.pnpm/@clerk+nextjs@6.2.0_next@15.0.2_react-dom@19.0.0-rc-02c0e824-20241028_react@19.0.0-rc-02c0e82_ge3lh3absj2brzrax3pfndyaau/node_modules/@clerk/nextjs/src/server/utils.ts"],"sourcesContent":["import type { AuthenticateRequestOptions, ClerkRequest, RequestState } from '@clerk/backend/internal';\nimport { constants } from '@clerk/backend/internal';\nimport { isDevelopmentFromSecretKey } from '@clerk/shared/keys';\nimport { logger } from '@clerk/shared/logger';\nimport { isHttpOrHttps } from '@clerk/shared/proxy';\nimport { handleValueOrFn } from '@clerk/shared/utils';\nimport AES from 'crypto-js/aes';\nimport encUtf8 from 'crypto-js/enc-utf8';\nimport hmacSHA1 from 'crypto-js/hmac-sha1';\nimport type { NextRequest } from 'next/server';\nimport { NextResponse } from 'next/server';\n\nimport { constants as nextConstants } from '../constants';\nimport { DOMAIN, ENCRYPTION_KEY, IS_SATELLITE, PROXY_URL, SECRET_KEY, SIGN_IN_URL } from './constants';\nimport { authSignatureInvalid, encryptionKeyInvalid, missingDomainAndProxy, missingSignInUrlInDev } from './errors';\nimport { errorThrower } from './errorThrower';\nimport type { RequestLike } from './types';\n\nexport function getCustomAttributeFromRequest(req: RequestLike, key: string): string | null | undefined {\n  // @ts-expect-error - TS doesn't like indexing into RequestLike\n  return key in req ? req[key] : undefined;\n}\n\nexport function getAuthKeyFromRequest(\n  req: RequestLike,\n  key: keyof typeof constants.Attributes,\n): string | null | undefined {\n  return getCustomAttributeFromRequest(req, constants.Attributes[key]) || getHeader(req, constants.Headers[key]);\n}\n\nexport function getHeader(req: RequestLike, name: string): string | null | undefined {\n  if (isNextRequest(req)) {\n    return req.headers.get(name);\n  }\n\n  // If no header has been determined for IncomingMessage case, check if available within private `socket` headers\n  // When deployed to vercel, req.headers for API routes is a `IncomingHttpHeaders` key-val object which does not follow\n  // the Headers spec so the name is no longer case-insensitive.\n  return req.headers[name] || req.headers[name.toLowerCase()] || (req.socket as any)?._httpMessage?.getHeader(name);\n}\n\nexport function getCookie(req: RequestLike, name: string): string | undefined {\n  if (isNextRequest(req)) {\n    // Nextjs broke semver in the 13.0.0 -> 13.0.1 release, so even though\n    // this should be RequestCookie in all updated apps. In order to support apps\n    // using v13.0.0 still, we explicitly add the string type\n    // https://github.com/vercel/next.js/pull/41526\n    const reqCookieOrString = req.cookies.get(name) as ReturnType<NextRequest['cookies']['get']> | string | undefined;\n    if (!reqCookieOrString) {\n      return undefined;\n    }\n    return typeof reqCookieOrString === 'string' ? reqCookieOrString : reqCookieOrString.value;\n  }\n  return req.cookies[name];\n}\n\nfunction isNextRequest(val: unknown): val is NextRequest {\n  try {\n    const { headers, nextUrl, cookies } = (val || {}) as NextRequest;\n    return (\n      typeof headers?.get === 'function' &&\n      typeof nextUrl?.searchParams.get === 'function' &&\n      typeof cookies?.get === 'function'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\nconst OVERRIDE_HEADERS = 'x-middleware-override-headers';\nconst MIDDLEWARE_HEADER_PREFIX = 'x-middleware-request' as string;\n\nexport const setRequestHeadersOnNextResponse = (\n  res: NextResponse | Response,\n  req: Request,\n  newHeaders: Record<string, string>,\n) => {\n  if (!res.headers.get(OVERRIDE_HEADERS)) {\n    // Emulate a user setting overrides by explicitly adding the required nextjs headers\n    // https://github.com/vercel/next.js/pull/41380\n    // @ts-expect-error\n    res.headers.set(OVERRIDE_HEADERS, [...req.headers.keys()]);\n    req.headers.forEach((val, key) => {\n      res.headers.set(`${MIDDLEWARE_HEADER_PREFIX}-${key}`, val);\n    });\n  }\n\n  // Now that we have normalised res to include overrides, just append the new header\n  Object.entries(newHeaders).forEach(([key, val]) => {\n    res.headers.set(OVERRIDE_HEADERS, `${res.headers.get(OVERRIDE_HEADERS)},${key}`);\n    res.headers.set(`${MIDDLEWARE_HEADER_PREFIX}-${key}`, val);\n  });\n};\n\n// Auth result will be set as both a query param & header when applicable\nexport function decorateRequest(\n  req: ClerkRequest,\n  res: Response,\n  requestState: RequestState,\n  requestData?: AuthenticateRequestOptions,\n): Response {\n  const { reason, message, status, token } = requestState;\n  // pass-through case, convert to next()\n  if (!res) {\n    res = NextResponse.next();\n  }\n\n  // redirect() case, return early\n  if (res.headers.get(nextConstants.Headers.NextRedirect)) {\n    return res;\n  }\n\n  let rewriteURL;\n\n  // next() case, convert to a rewrite\n  if (res.headers.get(nextConstants.Headers.NextResume) === '1') {\n    res.headers.delete(nextConstants.Headers.NextResume);\n    rewriteURL = new URL(req.url);\n  }\n\n  // rewrite() case, set auth result only if origin remains the same\n  const rewriteURLHeader = res.headers.get(nextConstants.Headers.NextRewrite);\n\n  if (rewriteURLHeader) {\n    const reqURL = new URL(req.url);\n    rewriteURL = new URL(rewriteURLHeader);\n\n    // if the origin has changed, return early\n    if (rewriteURL.origin !== reqURL.origin) {\n      return res;\n    }\n  }\n\n  if (rewriteURL) {\n    const clerkRequestData = encryptClerkRequestData(requestData);\n\n    setRequestHeadersOnNextResponse(res, req, {\n      [constants.Headers.AuthStatus]: status,\n      [constants.Headers.AuthToken]: token || '',\n      [constants.Headers.AuthSignature]: token ? createTokenSignature(token, requestData?.secretKey ?? SECRET_KEY) : '',\n      [constants.Headers.AuthMessage]: message || '',\n      [constants.Headers.AuthReason]: reason || '',\n      [constants.Headers.ClerkUrl]: req.clerkUrl.toString(),\n      ...(clerkRequestData ? { [constants.Headers.ClerkRequestData]: clerkRequestData } : {}),\n    });\n    res.headers.set(nextConstants.Headers.NextRewrite, rewriteURL.href);\n  }\n\n  return res;\n}\n\nexport const apiEndpointUnauthorizedNextResponse = () => {\n  return NextResponse.json(null, { status: 401, statusText: 'Unauthorized' });\n};\n\nexport const handleMultiDomainAndProxy = (clerkRequest: ClerkRequest, opts: AuthenticateRequestOptions) => {\n  const relativeOrAbsoluteProxyUrl = handleValueOrFn(opts?.proxyUrl, clerkRequest.clerkUrl, PROXY_URL);\n\n  let proxyUrl;\n  if (!!relativeOrAbsoluteProxyUrl && !isHttpOrHttps(relativeOrAbsoluteProxyUrl)) {\n    proxyUrl = new URL(relativeOrAbsoluteProxyUrl, clerkRequest.clerkUrl).toString();\n  } else {\n    proxyUrl = relativeOrAbsoluteProxyUrl;\n  }\n\n  const isSatellite = handleValueOrFn(opts.isSatellite, new URL(clerkRequest.url), IS_SATELLITE);\n  const domain = handleValueOrFn(opts.domain, new URL(clerkRequest.url), DOMAIN);\n  const signInUrl = opts?.signInUrl || SIGN_IN_URL;\n\n  if (isSatellite && !proxyUrl && !domain) {\n    throw new Error(missingDomainAndProxy);\n  }\n\n  if (isSatellite && !isHttpOrHttps(signInUrl) && isDevelopmentFromSecretKey(opts.secretKey || SECRET_KEY)) {\n    throw new Error(missingSignInUrlInDev);\n  }\n\n  return {\n    proxyUrl,\n    isSatellite,\n    domain,\n    signInUrl,\n  };\n};\n\nexport const redirectAdapter = (url: string | URL) => {\n  return NextResponse.redirect(url, { headers: { [constants.Headers.ClerkRedirectTo]: 'true' } });\n};\n\nexport function assertAuthStatus(req: RequestLike, error: string) {\n  const authStatus = getAuthKeyFromRequest(req, 'AuthStatus');\n\n  if (!authStatus) {\n    throw new Error(error);\n  }\n}\n\nexport function assertKey(key: string, onError: () => never): string {\n  if (!key) {\n    onError();\n  }\n\n  return key;\n}\n\n/**\n * Compute a cryptographic signature from a session token and provided secret key. Used to validate that the token has not been modified when transferring between middleware and the Next.js origin.\n */\nfunction createTokenSignature(token: string, key: string): string {\n  return hmacSHA1(token, key).toString();\n}\n\n/**\n * Assert that the provided token generates a matching signature.\n */\nexport function assertTokenSignature(token: string, key: string, signature?: string | null) {\n  if (!signature) {\n    throw new Error(authSignatureInvalid);\n  }\n\n  const expectedSignature = createTokenSignature(token, key);\n  if (expectedSignature !== signature) {\n    throw new Error(authSignatureInvalid);\n  }\n}\n\n/**\n * Encrypt request data propagated between server requests.\n * @internal\n **/\nexport function encryptClerkRequestData(requestData?: Partial<AuthenticateRequestOptions>) {\n  if (!requestData || !Object.values(requestData).length) {\n    return;\n  }\n\n  if (requestData.secretKey && !ENCRYPTION_KEY) {\n    // TODO SDK-1833: change this to an error in the next major version of `@clerk/nextjs`\n    logger.warnOnce(\n      'Clerk: Missing `CLERK_ENCRYPTION_KEY`. Required for propagating `secretKey` middleware option. See docs: https://clerk.com/docs/references/nextjs/clerk-middleware#dynamic-keys',\n    );\n\n    return;\n  }\n\n  return AES.encrypt(\n    JSON.stringify(requestData),\n    ENCRYPTION_KEY || assertKey(SECRET_KEY, () => errorThrower.throwMissingSecretKeyError()),\n  ).toString();\n}\n\n/**\n * Decrypt request data propagated between server requests.\n * @internal\n */\nexport function decryptClerkRequestData(\n  encryptedRequestData?: string | undefined | null,\n): Partial<AuthenticateRequestOptions> {\n  if (!encryptedRequestData) {\n    return {};\n  }\n\n  try {\n    const decryptedBytes = AES.decrypt(encryptedRequestData, ENCRYPTION_KEY || SECRET_KEY);\n    const encoded = decryptedBytes.toString(encUtf8);\n    return JSON.parse(encoded);\n  } catch (err) {\n    throw new Error(encryptionKeyInvalid);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 485, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 491, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/.pnpm/@clerk+nextjs@6.2.0_next@15.0.2_react-dom@19.0.0-rc-02c0e824-20241028_react@19.0.0-rc-02c0e82_ge3lh3absj2brzrax3pfndyaau/node_modules/@clerk/nextjs/src/app-router/server/utils.ts"],"sourcesContent":["import { NextRequest } from 'next/server';\n\nexport const isPrerenderingBailout = (e: unknown) => {\n  if (!(e instanceof Error) || !('message' in e)) {\n    return false;\n  }\n\n  const { message } = e;\n\n  const lowerCaseInput = message.toLowerCase();\n  const dynamicServerUsage = lowerCaseInput.includes('dynamic server usage');\n  const bailOutPrerendering = lowerCaseInput.includes('this page needs to bail out of prerendering');\n\n  // note: new error message syntax introduced in next@14.1.1-canary.21\n  // but we still want to support older versions.\n  // https://github.com/vercel/next.js/pull/61332 (dynamic-rendering.ts:153)\n  const routeRegex = /Route .*? needs to bail out of prerendering at this point because it used .*?./;\n\n  return routeRegex.test(message) || dynamicServerUsage || bailOutPrerendering;\n};\n\nexport async function buildRequestLike() {\n  try {\n    // Dynamically import next/headers, otherwise Next12 apps will break\n    // @ts-ignore: Cannot find module 'next/headers' or its corresponding type declarations.ts(2307)\n    const { getHeaders } = await import('ezheaders');\n    return new NextRequest('https://placeholder.com', { headers: await getHeaders() });\n  } catch (e: any) {\n    // rethrow the error when react throws a prerendering bailout\n    // https://nextjs.org/docs/messages/ppr-caught-error\n    if (e && isPrerenderingBailout(e)) {\n      throw e;\n    }\n\n    throw new Error(\n      `Clerk: auth() and currentUser() are only supported in App Router (/app directory).\\nIf you're using /pages, try getAuth() instead.\\nOriginal error: ${e}`,\n    );\n  }\n}\n\n// Original source: https://github.com/vercel/next.js/blob/canary/packages/next/src/server/app-render/get-script-nonce-from-header.tsx\nexport function getScriptNonceFromHeader(cspHeaderValue: string): string | undefined {\n  const directives = cspHeaderValue\n    // Directives are split by ';'.\n    .split(';')\n    .map(directive => directive.trim());\n\n  // First try to find the directive for the 'script-src', otherwise try to\n  // fallback to the 'default-src'.\n  const directive =\n    directives.find(dir => dir.startsWith('script-src')) || directives.find(dir => dir.startsWith('default-src'));\n\n  // If no directive could be found, then we're done.\n  if (!directive) {\n    return;\n  }\n\n  // Extract the nonce from the directive\n  const nonce = directive\n    .split(' ')\n    // Remove the 'strict-src'/'default-src' string, this can't be the nonce.\n    .slice(1)\n    .map(source => source.trim())\n    // Find the first source with the 'nonce-' prefix.\n    .find(source => source.startsWith(\"'nonce-\") && source.length > 8 && source.endsWith(\"'\"))\n    // Grab the nonce by trimming the 'nonce-' prefix.\n    ?.slice(7, -1);\n\n  // If we could't find the nonce, then we're done.\n  if (!nonce) {\n    return;\n  }\n\n  // Don't accept the nonce value if it contains HTML escape characters.\n  // Technically, the spec requires a base64'd value, but this is just an\n  // extra layer.\n  if (/[&><\\u2028\\u2029]/g.test(nonce)) {\n    throw new Error(\n      'Nonce value from Content-Security-Policy contained invalid HTML escape characters, which is disallowed for security reasons. Make sure that your nonce value does not contain the following characters: `<`, `>`, `&`',\n    );\n  }\n\n  return nonce;\n}\n"],"names":["directive"],"mappings":";;;;;;AAAA,SAAS,mBAAmB;;AAErB,MAAM,wBAAwB,CAAC,MAAe;IACnD,IAAI,CAAA,CAAE,aAAa,KAAA,KAAU,CAAA,CAAE,aAAa,CAAA,GAAI;QAC9C,OAAO;IACT;IAEA,MAAM,EAAE,OAAA,CAAQ,CAAA,GAAI;IAEpB,MAAM,iBAAiB,QAAQ,WAAA,CAAY;IAC3C,MAAM,qBAAqB,eAAe,QAAA,CAAS,sBAAsB;IACzE,MAAM,sBAAsB,eAAe,QAAA,CAAS,6CAA6C;IAKjG,MAAM,aAAa;IAEnB,OAAO,WAAW,IAAA,CAAK,OAAO,KAAK,sBAAsB;AAC3D;AAEA,eAAsB,mBAAmB;IACvC,IAAI;QAGF,MAAM,EAAE,UAAA,CAAW,CAAA,GAAI,MAAM,OAAO,WAAW;QAC/C,OAAO,kZAAI,cAAA,CAAY,2BAA2B;YAAE,SAAS,MAAM,WAAW;QAAE,CAAC;IACnF,EAAA,OAAS,GAAQ;QAGf,IAAI,KAAK,sBAAsB,CAAC,GAAG;YACjC,MAAM;QACR;QAEA,MAAM,IAAI,MACR,CAAA;;gBAAA,EAAuJ,CAAC,EAAA;IAE5J;AACF;AAGO,SAAS,yBAAyB,cAAA,EAA4C;IAzCrF,IAAA;IA0CE,MAAM,aAAa,eAEhB,KAAA,CAAM,GAAG,EACT,GAAA,CAAI,CAAAA,aAAaA,WAAU,IAAA,CAAK,CAAC;IAIpC,MAAM,YACJ,WAAW,IAAA,CAAK,CAAA,MAAO,IAAI,UAAA,CAAW,YAAY,CAAC,KAAK,WAAW,IAAA,CAAK,CAAA,MAAO,IAAI,UAAA,CAAW,aAAa,CAAC;IAG9G,IAAI,CAAC,WAAW;QACd;IACF;IAGA,MAAM,QAAA,CAAQ,KAAA,UACX,KAAA,CAAM,GAAG,EAET,KAAA,CAAM,CAAC,EACP,GAAA,CAAI,CAAA,SAAU,OAAO,IAAA,CAAK,CAAC,EAE3B,IAAA,CAAK,CAAA,SAAU,OAAO,UAAA,CAAW,SAAS,KAAK,OAAO,MAAA,GAAS,KAAK,OAAO,QAAA,CAAS,GAAG,CAAC,CAAA,KAN7E,OAAA,KAAA,IAAA,GAQV,KAAA,CAAM,GAAG,CAAA;IAGb,IAAI,CAAC,OAAO;QACV;IACF;IAKA,IAAI,qBAAqB,IAAA,CAAK,KAAK,GAAG;QACpC,MAAM,IAAI,MACR;IAEJ;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 549, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/.pnpm/@clerk+nextjs@6.2.0_next@15.0.2_react-dom@19.0.0-rc-02c0e824-20241028_react@19.0.0-rc-02c0e82_ge3lh3absj2brzrax3pfndyaau/node_modules/@clerk/nextjs/src/server/clerkClient.ts"],"sourcesContent":["import { createClerkClient } from '@clerk/backend';\nimport { constants } from '@clerk/backend/internal';\n\nimport { buildRequestLike, isPrerenderingBailout } from '../app-router/server/utils';\nimport { clerkMiddlewareRequestDataStorage } from './clerkMiddleware';\nimport {\n  API_URL,\n  API_VERSION,\n  DOMAIN,\n  IS_SATELLITE,\n  PROXY_URL,\n  PUBLISHABLE_KEY,\n  SDK_METADATA,\n  SECRET_KEY,\n  TELEMETRY_DEBUG,\n  TELEMETRY_DISABLED,\n} from './constants';\nimport { decryptClerkRequestData, getHeader } from './utils';\n\nconst clerkClientDefaultOptions = {\n  secretKey: SECRET_KEY,\n  publishableKey: PUBLISHABLE_KEY,\n  apiUrl: API_URL,\n  apiVersion: API_VERSION,\n  userAgent: `${PACKAGE_NAME}@${PACKAGE_VERSION}`,\n  proxyUrl: PROXY_URL,\n  domain: DOMAIN,\n  isSatellite: IS_SATELLITE,\n  sdkMetadata: SDK_METADATA,\n  telemetry: {\n    disabled: TELEMETRY_DISABLED,\n    debug: TELEMETRY_DEBUG,\n  },\n};\n\nconst createClerkClientWithOptions: typeof createClerkClient = options =>\n  createClerkClient({ ...clerkClientDefaultOptions, ...options });\n\n/**\n * Constructs a BAPI client that accesses request data within the runtime.\n * Necessary if middleware dynamic keys are used.\n */\nconst clerkClient = async () => {\n  let requestData;\n\n  try {\n    const request = await buildRequestLike();\n    const encryptedRequestData = getHeader(request, constants.Headers.ClerkRequestData);\n    requestData = decryptClerkRequestData(encryptedRequestData);\n  } catch (err) {\n    if (err && isPrerenderingBailout(err)) {\n      throw err;\n    }\n  }\n\n  // Fallbacks between options from middleware runtime and `NextRequest` from application server\n  const options = clerkMiddlewareRequestDataStorage.getStore()?.get('requestData') ?? requestData;\n  if (options?.secretKey || options?.publishableKey) {\n    return createClerkClientWithOptions(options);\n  }\n\n  return createClerkClientWithOptions({});\n};\n\nexport { clerkClient };\n"],"names":[],"mappings":";;;AAAA,SAAS,yBAAyB;AAClC,SAAS,iBAAiB;AAI1B;AAFA,SAAS,kBAAkB,6BAA6B;AAcxD,SAAS,yBAAyB,iBAAiB;;AAbnD,SAAS,yCAAyC;;;;;;;AAelD,MAAM,4BAA4B;IAChC,mYAAW,aAAA;IACX,wYAAgB,kBAAA;IAChB,gYAAQ,UAAA;IACR,oYAAY,cAAA;IACZ,WAAW,GAAG,eAAY,CAAA,CAAA,EAAI,OAAe,EAAA;IAC7C,kYAAU,YAAA;IACV,gYAAQ,SAAA;IACR,qYAAa,eAAA;IACb,qYAAa,eAAA;IACb,WAAW;QACT,UAAU,6YAAA;QACV,+XAAO,kBAAA;IACT;AACF;AAEA,MAAM,+BAAyD,CAAA,6WAC7D,oBAAA,EAAkB;QAAE,GAAG,yBAAA;QAA2B,GAAG,OAAA;IAAQ,CAAC;AAMhE,MAAM,cAAc,YAAY;IA1ChC,IAAA,IAAA;IA2CE,IAAI;IAEJ,IAAI;QACF,MAAM,UAAU,+YAAM,mBAAA,CAAiB;QACvC,MAAM,wBAAuB,mYAAA,EAAU,oYAAS,YAAA,CAAU,OAAA,CAAQ,gBAAgB;QAClF,sYAAc,0BAAA,EAAwB,oBAAoB;IAC5D,EAAA,OAAS,KAAK;QACZ,IAAI,gZAAO,wBAAA,EAAsB,GAAG,GAAG;YACrC,MAAM;QACR;IACF;IAGA,MAAM,UAAA,CAAU,KAAA,CAAA,KAAA,6XAAA,CAAA,oCAAA,CAAkC,QAAA,CAAS,CAAA,KAA3C,OAAA,KAAA,IAAA,GAA8C,GAAA,CAAI,cAAA,KAAlD,OAAA,KAAoE;IACpF,IAAA,CAAI,WAAA,OAAA,KAAA,IAAA,QAAS,SAAA,KAAA,CAAa,WAAA,OAAA,KAAA,IAAA,QAAS,cAAA,GAAgB;QACjD,OAAO,6BAA6B,OAAO;IAC7C;IAEA,OAAO,6BAA6B,CAAC,CAAC;AACxC","ignoreList":[0]}},
    {"offset": {"line": 604, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 610, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/.pnpm/@clerk+nextjs@6.2.0_next@15.0.2_react-dom@19.0.0-rc-02c0e824-20241028_react@19.0.0-rc-02c0e82_ge3lh3absj2brzrax3pfndyaau/node_modules/@clerk/nextjs/src/utils/response.ts"],"sourcesContent":["import { constants as nextConstants } from '../constants';\n\nexport const isRedirect = (res: Response) => {\n  return res.headers.get(nextConstants.Headers.NextRedirect);\n};\n\nexport const setHeader = <T extends Response>(res: T, name: string, val: string): T => {\n  res.headers.set(name, val);\n  return res;\n};\n\nexport const stringifyHeaders = (headers: { forEach: Headers['forEach'] }) => {\n  if (!headers) {\n    return JSON.stringify({});\n  }\n\n  const obj: Record<string, string> = {};\n  headers.forEach((value, name) => {\n    obj[name] = value;\n  });\n  return JSON.stringify(obj);\n};\n"],"names":[],"mappings":";;;;;AAAA,SAAS,aAAa,qBAAqB;;AAEpC,MAAM,aAAa,CAAC,QAAkB;IAC3C,OAAO,IAAI,OAAA,CAAQ,GAAA,+WAAI,YAAA,CAAc,OAAA,CAAQ,YAAY;AAC3D;AAEO,MAAM,YAAY,CAAqB,KAAQ,MAAc,QAAmB;IACrF,IAAI,OAAA,CAAQ,GAAA,CAAI,MAAM,GAAG;IACzB,OAAO;AACT;AAEO,MAAM,mBAAmB,CAAC,YAA6C;IAC5E,IAAI,CAAC,SAAS;QACZ,OAAO,KAAK,SAAA,CAAU,CAAC,CAAC;IAC1B;IAEA,MAAM,MAA8B,CAAC;IACrC,QAAQ,OAAA,CAAQ,CAAC,OAAO,SAAS;QAC/B,GAAA,CAAI,IAAI,CAAA,GAAI;IACd,CAAC;IACD,OAAO,KAAK,SAAA,CAAU,GAAG;AAC3B","ignoreList":[0]}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 642, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/.pnpm/@clerk+nextjs@6.2.0_next@15.0.2_react-dom@19.0.0-rc-02c0e824-20241028_react@19.0.0-rc-02c0e82_ge3lh3absj2brzrax3pfndyaau/node_modules/@clerk/nextjs/src/utils/serverRedirectWithAuth.ts"],"sourcesContent":["// Middleware runs on the server side, before clerk-js is loaded, that's why we need Cookies.\nimport type { ClerkRequest } from '@clerk/backend/internal';\nimport { constants } from '@clerk/backend/internal';\nimport { DEV_BROWSER_JWT_KEY, setDevBrowserJWTInURL } from '@clerk/shared/devBrowser';\nimport { isDevelopmentFromSecretKey } from '@clerk/shared/keys';\nimport { NextResponse } from 'next/server';\n\n/**\n * Grabs the dev browser JWT from cookies and appends it to the redirect URL when redirecting to cross-origin.\n */\nexport const serverRedirectWithAuth = (clerkRequest: ClerkRequest, res: Response, opts: { secretKey: string }) => {\n  const location = res.headers.get('location');\n  const shouldAppendDevBrowser = res.headers.get(constants.Headers.ClerkRedirectTo) === 'true';\n\n  if (\n    shouldAppendDevBrowser &&\n    !!location &&\n    isDevelopmentFromSecretKey(opts.secretKey) &&\n    clerkRequest.clerkUrl.isCrossOrigin(location)\n  ) {\n    const dbJwt = clerkRequest.cookies.get(DEV_BROWSER_JWT_KEY) || '';\n    // Next.js 12.1+ allows redirects only to absolute URLs\n    const url = new URL(location);\n    const urlWithDevBrowser = setDevBrowserJWTInURL(url, dbJwt);\n    return NextResponse.redirect(urlWithDevBrowser.href, res);\n  }\n  return res;\n};\n"],"names":[],"mappings":";;;AAEA,SAAS,iBAAiB;AAC1B,SAAS,qBAAqB,6BAA6B;;;;AAC3D,SAAS,kCAAkC;;AAC3C,SAAS,oBAAoB;;;;;AAKtB,MAAM,yBAAyB,CAAC,cAA4B,KAAe,SAAgC;IAChH,MAAM,WAAW,IAAI,OAAA,CAAQ,GAAA,CAAI,UAAU;IAC3C,MAAM,yBAAyB,IAAI,OAAA,CAAQ,GAAA,2XAAI,aAAA,CAAU,OAAA,CAAQ,eAAe,MAAM;IAEtF,IACE,0BACA,CAAC,CAAC,6XACF,6BAAA,EAA2B,KAAK,SAAS,KACzC,aAAa,QAAA,CAAS,aAAA,CAAc,QAAQ,GAC5C;QACA,MAAM,QAAQ,aAAa,OAAA,CAAQ,GAAA,8WAAI,sBAAmB,KAAK;QAE/D,MAAM,MAAM,IAAI,IAAI,QAAQ;QAC5B,MAAM,qYAAoB,wBAAA,EAAsB,KAAK,KAAK;QAC1D,sZAAO,eAAA,CAAa,QAAA,CAAS,kBAAkB,IAAA,EAAM,GAAG;IAC1D;IACA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 670, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 676, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/.pnpm/@clerk+nextjs@6.2.0_next@15.0.2_react-dom@19.0.0-rc-02c0e824-20241028_react@19.0.0-rc-02c0e82_ge3lh3absj2brzrax3pfndyaau/node_modules/@clerk/nextjs/src/server/nextErrors.ts"],"sourcesContent":["/**\n * Clerk's identifiers that are used alongside the ones from Next.js\n */\nconst CONTROL_FLOW_ERROR = {\n  FORCE_NOT_FOUND: 'CLERK_PROTECT_REWRITE',\n  REDIRECT_TO_URL: 'CLERK_PROTECT_REDIRECT_TO_URL',\n  REDIRECT_TO_SIGN_IN: 'CLERK_PROTECT_REDIRECT_TO_SIGN_IN',\n};\n\n/**\n * In-house implementation of `notFound()`\n * https://github.com/vercel/next.js/blob/canary/packages/next/src/client/components/not-found.ts\n */\nconst NOT_FOUND_ERROR_CODE = 'NEXT_NOT_FOUND';\n\ntype NotFoundError = Error & {\n  digest: typeof NOT_FOUND_ERROR_CODE;\n  clerk_digest: typeof CONTROL_FLOW_ERROR.FORCE_NOT_FOUND;\n};\n\nfunction isNextjsNotFoundError(error: unknown): error is NotFoundError {\n  if (typeof error !== 'object' || error === null || !('digest' in error)) {\n    return false;\n  }\n\n  return error.digest === NOT_FOUND_ERROR_CODE;\n}\n\nfunction nextjsNotFound(): never {\n  const error = new Error(NOT_FOUND_ERROR_CODE);\n  (error as NotFoundError).digest = NOT_FOUND_ERROR_CODE;\n  (error as NotFoundError).clerk_digest = CONTROL_FLOW_ERROR.FORCE_NOT_FOUND;\n  throw error;\n}\n\n/**\n * In-house implementation of `redirect()`\n * https://github.com/vercel/next.js/blob/canary/packages/next/src/client/components/redirect.ts\n */\n\nconst REDIRECT_ERROR_CODE = 'NEXT_REDIRECT';\n\ntype RedirectError<T = unknown> = Error & {\n  digest: `${typeof REDIRECT_ERROR_CODE};${'replace'};${string};${307};`;\n  clerk_digest: typeof CONTROL_FLOW_ERROR.REDIRECT_TO_URL | typeof CONTROL_FLOW_ERROR.REDIRECT_TO_SIGN_IN;\n} & T;\n\nfunction nextjsRedirectError(\n  url: string,\n  extra: Record<string, unknown>,\n  type: 'replace' = 'replace',\n  statusCode: 307 = 307,\n): never {\n  const error = new Error(REDIRECT_ERROR_CODE) as RedirectError;\n  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`;\n  error.clerk_digest = CONTROL_FLOW_ERROR.REDIRECT_TO_URL;\n  Object.assign(error, extra);\n  throw error;\n}\n\nfunction redirectToSignInError(url: string, returnBackUrl?: string | URL | null): never {\n  nextjsRedirectError(url, {\n    clerk_digest: CONTROL_FLOW_ERROR.REDIRECT_TO_SIGN_IN,\n    returnBackUrl: returnBackUrl === null ? '' : returnBackUrl || url,\n  });\n}\n\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */\nfunction isNextjsRedirectError(error: unknown): error is RedirectError<{ redirectUrl: string | URL }> {\n  if (typeof error !== 'object' || error === null || !('digest' in error) || typeof error.digest !== 'string') {\n    return false;\n  }\n\n  const digest = error.digest.split(';');\n  const [errorCode, type] = digest;\n  const destination = digest.slice(2, -2).join(';');\n  const status = digest.at(-2);\n\n  const statusCode = Number(status);\n\n  return (\n    errorCode === REDIRECT_ERROR_CODE &&\n    (type === 'replace' || type === 'push') &&\n    typeof destination === 'string' &&\n    !isNaN(statusCode) &&\n    statusCode === 307\n  );\n}\n\nfunction isRedirectToSignInError(error: unknown): error is RedirectError<{ returnBackUrl: string | URL }> {\n  if (isNextjsRedirectError(error) && 'clerk_digest' in error) {\n    return error.clerk_digest === CONTROL_FLOW_ERROR.REDIRECT_TO_SIGN_IN;\n  }\n\n  return false;\n}\n\nexport {\n  isNextjsNotFoundError,\n  nextjsNotFound,\n  redirectToSignInError,\n  nextjsRedirectError,\n  isNextjsRedirectError,\n  isRedirectToSignInError,\n};\n"],"names":[],"mappings":";;;;;;;;AAGA,MAAM,qBAAqB;IACzB,iBAAiB;IACjB,iBAAiB;IACjB,qBAAqB;AACvB;AAMA,MAAM,uBAAuB;AAO7B,SAAS,sBAAsB,KAAA,EAAwC;IACrE,IAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,CAAA,CAAE,YAAY,KAAA,GAAQ;QACvE,OAAO;IACT;IAEA,OAAO,MAAM,MAAA,KAAW;AAC1B;AAEA,SAAS,iBAAwB;IAC/B,MAAM,QAAQ,IAAI,MAAM,oBAAoB;IAC3C,MAAwB,MAAA,GAAS;IACjC,MAAwB,YAAA,GAAe,mBAAmB,eAAA;IAC3D,MAAM;AACR;AAOA,MAAM,sBAAsB;AAO5B,SAAS,oBACP,GAAA,EACA,KAAA,EACA,OAAkB,SAAA,EAClB,aAAkB,GAAA,EACX;IACP,MAAM,QAAQ,IAAI,MAAM,mBAAmB;IAC3C,MAAM,MAAA,GAAS,GAAG,mBAAmB,CAAA,CAAA,EAAI,IAAI,CAAA,CAAA,EAAI,GAAG,CAAA,CAAA,EAAI,UAAU,CAAA,CAAA,CAAA;IAClE,MAAM,YAAA,GAAe,mBAAmB,eAAA;IACxC,OAAO,MAAA,CAAO,OAAO,KAAK;IAC1B,MAAM;AACR;AAEA,SAAS,sBAAsB,GAAA,EAAa,aAAA,EAA4C;IACtF,oBAAoB,KAAK;QACvB,cAAc,mBAAmB,mBAAA;QACjC,eAAe,kBAAkB,OAAO,KAAK,iBAAiB;IAChE,CAAC;AACH;AASA,SAAS,sBAAsB,KAAA,EAAuE;IACpG,IAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,CAAA,CAAE,YAAY,KAAA,KAAU,OAAO,MAAM,MAAA,KAAW,UAAU;QAC3G,OAAO;IACT;IAEA,MAAM,SAAS,MAAM,MAAA,CAAO,KAAA,CAAM,GAAG;IACrC,MAAM,CAAC,WAAW,IAAI,CAAA,GAAI;IAC1B,MAAM,cAAc,OAAO,KAAA,CAAM,GAAG,CAAA,CAAE,EAAE,IAAA,CAAK,GAAG;IAChD,MAAM,SAAS,OAAO,EAAA,CAAG,CAAA,CAAE;IAE3B,MAAM,aAAa,OAAO,MAAM;IAEhC,OACE,cAAc,uBAAA,CACb,SAAS,aAAa,SAAS,MAAA,KAChC,OAAO,gBAAgB,YACvB,CAAC,MAAM,UAAU,KACjB,eAAe;AAEnB;AAEA,SAAS,wBAAwB,KAAA,EAAyE;IACxG,IAAI,sBAAsB,KAAK,KAAK,kBAAkB,OAAO;QAC3D,OAAO,MAAM,YAAA,KAAiB,mBAAmB,mBAAA;IACnD;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 735, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 741, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/.pnpm/@clerk+nextjs@6.2.0_next@15.0.2_react-dom@19.0.0-rc-02c0e824-20241028_react@19.0.0-rc-02c0e82_ge3lh3absj2brzrax3pfndyaau/node_modules/@clerk/nextjs/src/server/nextFetcher.ts"],"sourcesContent":["type Fetcher = typeof globalThis.fetch;\n\n/**\n * Based on nextjs internal implementation https://github.com/vercel/next.js/blob/6185444e0a944a82e7719ac37dad8becfed86acd/packages/next/src/server/lib/patch-fetch.ts#L23\n */\ntype NextFetcher = Fetcher & {\n  readonly __nextPatched: true;\n  readonly __nextGetStaticStore: () => { getStore: () => StaticGenerationAsyncStorage | undefined };\n};\n\n/**\n * Full type can be found https://github.com/vercel/next.js/blob/6185444e0a944a82e7719ac37dad8becfed86acd/packages/next/src/client/components/static-generation-async-storage.external.ts#L4\n */\ninterface StaticGenerationAsyncStorage {\n  /**\n   * Available for Next 14\n   */\n  readonly pagePath?: string;\n  /**\n   * Available for Next 15\n   */\n  readonly page?: string;\n}\n\nfunction isNextFetcher(fetch: Fetcher | NextFetcher): fetch is NextFetcher {\n  return '__nextPatched' in fetch && fetch.__nextPatched === true;\n}\n\nexport { isNextFetcher };\n"],"names":[],"mappings":";;;AAwBA,SAAS,cAAc,KAAA,EAAoD;IACzE,OAAO,mBAAmB,SAAS,MAAM,aAAA,KAAkB;AAC7D","ignoreList":[0]}},
    {"offset": {"line": 749, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 755, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/.pnpm/@clerk+nextjs@6.2.0_next@15.0.2_react-dom@19.0.0-rc-02c0e824-20241028_react@19.0.0-rc-02c0e82_ge3lh3absj2brzrax3pfndyaau/node_modules/@clerk/nextjs/src/server/protect.ts"],"sourcesContent":["import type { AuthObject } from '@clerk/backend';\nimport type { RedirectFun, SignedInAuthObject } from '@clerk/backend/internal';\nimport { constants } from '@clerk/backend/internal';\nimport type {\n  CheckAuthorizationParamsWithCustomPermissions,\n  CheckAuthorizationWithCustomPermissions,\n} from '@clerk/types';\n\nimport { constants as nextConstants } from '../constants';\nimport { isNextFetcher } from './nextFetcher';\n\ntype AuthProtectOptions = { unauthorizedUrl?: string; unauthenticatedUrl?: string };\n\n/**\n * Throws a Nextjs notFound error if user is not authenticated or authorized.\n */\nexport interface AuthProtect {\n  (params?: CheckAuthorizationParamsWithCustomPermissions, options?: AuthProtectOptions): Promise<SignedInAuthObject>;\n\n  (\n    params?: (has: CheckAuthorizationWithCustomPermissions) => boolean,\n    options?: AuthProtectOptions,\n  ): Promise<SignedInAuthObject>;\n\n  (options?: AuthProtectOptions): Promise<SignedInAuthObject>;\n}\n\nexport function createProtect(opts: {\n  request: Request;\n  authObject: AuthObject;\n  /**\n   * middleware and pages throw a notFound error if signed out\n   * but the middleware needs to throw an error it can catch\n   * use this callback to customise the behavior\n   */\n  notFound: () => never;\n  /**\n   * see {@link notFound} above\n   */\n  redirect: (url: string) => void;\n  /**\n   * protect() in middleware redirects to signInUrl if signed out\n   * protect() in pages throws a notFound error if signed out\n   * use this callback to customise the behavior\n   */\n  redirectToSignIn: RedirectFun<unknown>;\n}): AuthProtect {\n  const { redirectToSignIn, authObject, redirect, notFound, request } = opts;\n\n  return (async (...args: any[]) => {\n    const optionValuesAsParam = args[0]?.unauthenticatedUrl || args[0]?.unauthorizedUrl;\n    const paramsOrFunction = optionValuesAsParam\n      ? undefined\n      : (args[0] as\n          | CheckAuthorizationParamsWithCustomPermissions\n          | ((has: CheckAuthorizationWithCustomPermissions) => boolean));\n    const unauthenticatedUrl = (args[0]?.unauthenticatedUrl || args[1]?.unauthenticatedUrl) as string | undefined;\n    const unauthorizedUrl = (args[0]?.unauthorizedUrl || args[1]?.unauthorizedUrl) as string | undefined;\n\n    const handleUnauthenticated = () => {\n      if (unauthenticatedUrl) {\n        return redirect(unauthenticatedUrl);\n      }\n      if (isPageRequest(request)) {\n        // TODO: Handle runtime values. What happens if runtime values are set in middleware and in ClerkProvider as well?\n        return redirectToSignIn();\n      }\n      return notFound();\n    };\n\n    const handleUnauthorized = () => {\n      if (unauthorizedUrl) {\n        return redirect(unauthorizedUrl);\n      }\n      return notFound();\n    };\n\n    /**\n     * User is not authenticated\n     */\n    if (!authObject.userId) {\n      return handleUnauthenticated();\n    }\n\n    /**\n     * User is authenticated\n     */\n    if (!paramsOrFunction) {\n      return authObject;\n    }\n\n    /**\n     * if a function is passed and returns false then throw not found\n     */\n    if (typeof paramsOrFunction === 'function') {\n      if (paramsOrFunction(authObject.has)) {\n        return authObject;\n      }\n      return handleUnauthorized();\n    }\n\n    /**\n     * Checking if user is authorized when permission or role is passed\n     */\n    if (authObject.has(paramsOrFunction)) {\n      return authObject;\n    }\n\n    return handleUnauthorized();\n  }) as AuthProtect;\n}\n\nconst isServerActionRequest = (req: Request) => {\n  return (\n    !!req.headers.get(nextConstants.Headers.NextUrl) &&\n    (req.headers.get(constants.Headers.Accept)?.includes('text/x-component') ||\n      req.headers.get(constants.Headers.ContentType)?.includes('multipart/form-data') ||\n      !!req.headers.get(nextConstants.Headers.NextAction))\n  );\n};\n\nconst isPageRequest = (req: Request): boolean => {\n  return (\n    req.headers.get(constants.Headers.SecFetchDest) === 'document' ||\n    req.headers.get(constants.Headers.SecFetchDest) === 'iframe' ||\n    req.headers.get(constants.Headers.Accept)?.includes('text/html') ||\n    isAppRouterInternalNavigation(req) ||\n    isPagesRouterInternalNavigation(req)\n  );\n};\n\nconst isAppRouterInternalNavigation = (req: Request) =>\n  (!!req.headers.get(nextConstants.Headers.NextUrl) && !isServerActionRequest(req)) || isPagePathAvailable();\n\nconst isPagePathAvailable = () => {\n  const __fetch = globalThis.fetch;\n\n  if (!isNextFetcher(__fetch)) {\n    return false;\n  }\n\n  const { page, pagePath } = __fetch.__nextGetStaticStore().getStore() || {};\n\n  return Boolean(\n    // available on next@14\n    pagePath ||\n      // available on next@15\n      page,\n  );\n};\n\nconst isPagesRouterInternalNavigation = (req: Request) => !!req.headers.get(nextConstants.Headers.NextjsData);\n\n// /**\n//  * In case we want to handle router handlers and server actions differently in the future\n//  */\n// const isApiRouteRequest = (req: Request) => {\n//   return !isPageRequest(req) && !isServerActionRequest(req);\n// };\n"],"names":[],"mappings":";;;AAEA,SAAS,iBAAiB;AAM1B,SAAS,aAAa,qBAAqB;;AAC3C,SAAS,qBAAqB;;;;AAkBvB,SAAS,cAAc,IAAA,EAmBd;IACd,MAAM,EAAE,gBAAA,EAAkB,UAAA,EAAY,QAAA,EAAU,QAAA,EAAU,OAAA,CAAQ,CAAA,GAAI;IAEtE,OAAQ,OAAA,GAAU,SAAgB;QAjDpC,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA;QAkDI,MAAM,sBAAA,CAAA,CAAsB,KAAA,IAAA,CAAK,CAAC,CAAA,KAAN,OAAA,KAAA,IAAA,GAAS,kBAAA,KAAA,CAAA,CAAsB,KAAA,IAAA,CAAK,CAAC,CAAA,KAAN,OAAA,KAAA,IAAA,GAAS,eAAA;QACpE,MAAM,mBAAmB,sBACrB,KAAA,IACC,IAAA,CAAK,CAAC,CAAA;QAGX,MAAM,qBAAA,CAAA,CAAsB,KAAA,IAAA,CAAK,CAAC,CAAA,KAAN,OAAA,KAAA,IAAA,GAAS,kBAAA,KAAA,CAAA,CAAsB,KAAA,IAAA,CAAK,CAAC,CAAA,KAAN,OAAA,KAAA,IAAA,GAAS,kBAAA;QACpE,MAAM,kBAAA,CAAA,CAAmB,KAAA,IAAA,CAAK,CAAC,CAAA,KAAN,OAAA,KAAA,IAAA,GAAS,eAAA,KAAA,CAAA,CAAmB,KAAA,IAAA,CAAK,CAAC,CAAA,KAAN,OAAA,KAAA,IAAA,GAAS,eAAA;QAE9D,MAAM,wBAAwB,MAAM;YAClC,IAAI,oBAAoB;gBACtB,OAAO,SAAS,kBAAkB;YACpC;YACA,IAAI,cAAc,OAAO,GAAG;gBAE1B,OAAO,iBAAiB;YAC1B;YACA,OAAO,SAAS;QAClB;QAEA,MAAM,qBAAqB,MAAM;YAC/B,IAAI,iBAAiB;gBACnB,OAAO,SAAS,eAAe;YACjC;YACA,OAAO,SAAS;QAClB;QAKA,IAAI,CAAC,WAAW,MAAA,EAAQ;YACtB,OAAO,sBAAsB;QAC/B;QAKA,IAAI,CAAC,kBAAkB;YACrB,OAAO;QACT;QAKA,IAAI,OAAO,qBAAqB,YAAY;YAC1C,IAAI,iBAAiB,WAAW,GAAG,GAAG;gBACpC,OAAO;YACT;YACA,OAAO,mBAAmB;QAC5B;QAKA,IAAI,WAAW,GAAA,CAAI,gBAAgB,GAAG;YACpC,OAAO;QACT;QAEA,OAAO,mBAAmB;IAC5B;AACF;AAEA,MAAM,wBAAwB,CAAC,QAAiB;IAhHhD,IAAA,IAAA;IAiHE,OACE,CAAC,CAAC,IAAI,OAAA,CAAQ,GAAA,+WAAI,YAAA,CAAc,OAAA,CAAQ,OAAO,KAAA,CAAA,CAAA,CAC9C,KAAA,IAAI,OAAA,CAAQ,GAAA,4XAAI,YAAA,CAAU,OAAA,CAAQ,MAAM,CAAA,KAAxC,OAAA,KAAA,IAAA,GAA2C,QAAA,CAAS,mBAAA,KAAA,CAAA,CACnD,KAAA,IAAI,OAAA,CAAQ,GAAA,4XAAI,YAAA,CAAU,OAAA,CAAQ,WAAW,CAAA,KAA7C,OAAA,KAAA,IAAA,GAAgD,QAAA,CAAS,sBAAA,KACzD,CAAC,CAAC,IAAI,OAAA,CAAQ,GAAA,+WAAI,YAAA,CAAc,OAAA,CAAQ,UAAU,CAAA;AAExD;AAEA,MAAM,gBAAgB,CAAC,QAA0B;IAzHjD,IAAA;IA0HE,OACE,IAAI,OAAA,CAAQ,GAAA,2XAAI,aAAA,CAAU,OAAA,CAAQ,YAAY,MAAM,cACpD,IAAI,OAAA,CAAQ,GAAA,4XAAI,YAAA,CAAU,OAAA,CAAQ,YAAY,MAAM,YAAA,CAAA,CACpD,KAAA,IAAI,OAAA,CAAQ,GAAA,4XAAI,YAAA,CAAU,OAAA,CAAQ,MAAM,CAAA,KAAxC,OAAA,KAAA,IAAA,GAA2C,QAAA,CAAS,YAAA,KACpD,8BAA8B,GAAG,KACjC,gCAAgC,GAAG;AAEvC;AAEA,MAAM,gCAAgC,CAAC,MACpC,CAAC,CAAC,IAAI,OAAA,CAAQ,GAAA,+WAAI,YAAA,CAAc,OAAA,CAAQ,OAAO,KAAK,CAAC,sBAAsB,GAAG,KAAM,oBAAoB;AAE3G,MAAM,sBAAsB,MAAM;IAChC,MAAM,UAAU,WAAW,KAAA;IAE3B,IAAI,+XAAC,gBAAA,EAAc,OAAO,GAAG;QAC3B,OAAO;IACT;IAEA,MAAM,EAAE,IAAA,EAAM,QAAA,CAAS,CAAA,GAAI,QAAQ,oBAAA,CAAqB,EAAE,QAAA,CAAS,KAAK,CAAC;IAEzE,OAAO,QAAA,uBAAA;IAEL,YAAA,uBAAA;IAEE;AAEN;AAEA,MAAM,kCAAkC,CAAC,MAAiB,CAAC,CAAC,IAAI,OAAA,CAAQ,GAAA,+WAAI,YAAA,CAAc,OAAA,CAAQ,UAAU","ignoreList":[0]}},
    {"offset": {"line": 828, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 834, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/.pnpm/@clerk+nextjs@6.2.0_next@15.0.2_react-dom@19.0.0-rc-02c0e824-20241028_react@19.0.0-rc-02c0e82_ge3lh3absj2brzrax3pfndyaau/node_modules/@clerk/nextjs/src/server/clerkMiddleware.ts"],"sourcesContent":["import { AsyncLocalStorage } from 'node:async_hooks';\n\nimport type { AuthObject, ClerkClient } from '@clerk/backend';\nimport type { AuthenticateRequestOptions, ClerkRequest, RedirectFun, RequestState } from '@clerk/backend/internal';\nimport { AuthStatus, constants, createClerkRequest, createRedirect } from '@clerk/backend/internal';\nimport { eventMethodCalled } from '@clerk/shared/telemetry';\nimport type { NextMiddleware, NextRequest } from 'next/server';\nimport { NextResponse } from 'next/server';\n\nimport { isRedirect, serverRedirectWithAuth, setHeader } from '../utils';\nimport { withLogger } from '../utils/debugLogger';\nimport { clerkClient } from './clerkClient';\nimport { PUBLISHABLE_KEY, SECRET_KEY, SIGN_IN_URL, SIGN_UP_URL } from './constants';\nimport { errorThrower } from './errorThrower';\nimport {\n  isNextjsNotFoundError,\n  isNextjsRedirectError,\n  isRedirectToSignInError,\n  nextjsNotFound,\n  nextjsRedirectError,\n  redirectToSignInError,\n} from './nextErrors';\nimport type { AuthProtect } from './protect';\nimport { createProtect } from './protect';\nimport type { NextMiddlewareEvtParam, NextMiddlewareRequestParam, NextMiddlewareReturn } from './types';\nimport {\n  assertKey,\n  decorateRequest,\n  handleMultiDomainAndProxy,\n  redirectAdapter,\n  setRequestHeadersOnNextResponse,\n} from './utils';\n\nexport type ClerkMiddlewareAuthObject = AuthObject & {\n  redirectToSignIn: RedirectFun<Response>;\n};\n\nexport interface ClerkMiddlewareAuth {\n  (): Promise<ClerkMiddlewareAuthObject>;\n  protect: AuthProtect;\n}\n\ntype ClerkMiddlewareHandler = (\n  auth: ClerkMiddlewareAuth,\n  request: NextMiddlewareRequestParam,\n  event: NextMiddlewareEvtParam,\n) => NextMiddlewareReturn;\n\nexport type ClerkMiddlewareOptions = AuthenticateRequestOptions & { debug?: boolean };\n\ntype ClerkMiddlewareOptionsCallback = (req: NextRequest) => ClerkMiddlewareOptions;\n\n/**\n * Middleware for Next.js that handles authentication and authorization with Clerk.\n * For more details, please refer to the docs: https://clerk.com/docs/references/nextjs/clerk-middleware\n */\ninterface ClerkMiddleware {\n  /**\n   * @example\n   * export default clerkMiddleware((auth, request, event) => { ... }, options);\n   */\n  (handler: ClerkMiddlewareHandler, options?: ClerkMiddlewareOptions): NextMiddleware;\n\n  /**\n   * @example\n   * export default clerkMiddleware((auth, request, event) => { ... }, (req) => options);\n   */\n  (handler: ClerkMiddlewareHandler, options?: ClerkMiddlewareOptionsCallback): NextMiddleware;\n\n  /**\n   * @example\n   * export default clerkMiddleware(options);\n   */\n  (options?: ClerkMiddlewareOptions): NextMiddleware;\n\n  /**\n   * @example\n   * export default clerkMiddleware;\n   */\n  (request: NextMiddlewareRequestParam, event: NextMiddlewareEvtParam): NextMiddlewareReturn;\n}\n\nconst clerkMiddlewareRequestDataStore = new Map<'requestData', AuthenticateRequestOptions>();\nexport const clerkMiddlewareRequestDataStorage = new AsyncLocalStorage<typeof clerkMiddlewareRequestDataStore>();\n\n// @ts-expect-error TS is not happy here. Will dig into it\nexport const clerkMiddleware: ClerkMiddleware = (...args: unknown[]) => {\n  const [request, event] = parseRequestAndEvent(args);\n  const [handler, params] = parseHandlerAndOptions(args);\n\n  return clerkMiddlewareRequestDataStorage.run(clerkMiddlewareRequestDataStore, () => {\n    const nextMiddleware: NextMiddleware = withLogger('clerkMiddleware', logger => async (request, event) => {\n      // Handles the case where `options` is a callback function to dynamically access `NextRequest`\n      const resolvedParams = typeof params === 'function' ? params(request) : params;\n\n      const publishableKey = assertKey(resolvedParams.publishableKey || PUBLISHABLE_KEY, () =>\n        errorThrower.throwMissingPublishableKeyError(),\n      );\n      const secretKey = assertKey(resolvedParams.secretKey || SECRET_KEY, () =>\n        errorThrower.throwMissingSecretKeyError(),\n      );\n      const signInUrl = resolvedParams.signInUrl || SIGN_IN_URL;\n      const signUpUrl = resolvedParams.signUpUrl || SIGN_UP_URL;\n\n      const options = {\n        publishableKey,\n        secretKey,\n        signInUrl,\n        signUpUrl,\n        ...resolvedParams,\n      };\n\n      // Propagates the request data to be accessed on the server application runtime from helpers such as `clerkClient`\n      clerkMiddlewareRequestDataStore.set('requestData', options);\n\n      const resolvedClerkClient = await clerkClient();\n\n      resolvedClerkClient.telemetry.record(\n        eventMethodCalled('clerkMiddleware', {\n          handler: Boolean(handler),\n          satellite: Boolean(options.isSatellite),\n          proxy: Boolean(options.proxyUrl),\n        }),\n      );\n\n      if (options.debug) {\n        logger.enable();\n      }\n      const clerkRequest = createClerkRequest(request);\n      logger.debug('options', options);\n      logger.debug('url', () => clerkRequest.toJSON());\n\n      const requestState = await resolvedClerkClient.authenticateRequest(\n        clerkRequest,\n        createAuthenticateRequestOptions(clerkRequest, options),\n      );\n\n      logger.debug('requestState', () => ({\n        status: requestState.status,\n        headers: JSON.stringify(Object.fromEntries(requestState.headers)),\n        reason: requestState.reason,\n      }));\n\n      const locationHeader = requestState.headers.get(constants.Headers.Location);\n      if (locationHeader) {\n        return new Response(null, { status: 307, headers: requestState.headers });\n      } else if (requestState.status === AuthStatus.Handshake) {\n        throw new Error('Clerk: handshake status without redirect');\n      }\n\n      const authObject = requestState.toAuth();\n      logger.debug('auth', () => ({ auth: authObject, debug: authObject.debug() }));\n\n      const redirectToSignIn = createMiddlewareRedirectToSignIn(clerkRequest);\n      const protect = await createMiddlewareProtect(clerkRequest, authObject, redirectToSignIn);\n\n      const authObjWithMethods: ClerkMiddlewareAuthObject = Object.assign(authObject, { redirectToSignIn });\n      const authHandler = () => Promise.resolve(authObjWithMethods);\n      authHandler.protect = protect;\n\n      let handlerResult: Response = NextResponse.next();\n      try {\n        const userHandlerResult = await clerkMiddlewareRequestDataStorage.run(\n          clerkMiddlewareRequestDataStore,\n          async () => handler?.(authHandler, request, event),\n        );\n        handlerResult = userHandlerResult || handlerResult;\n      } catch (e: any) {\n        handlerResult = handleControlFlowErrors(e, clerkRequest, requestState);\n      }\n\n      // TODO @nikos: we need to make this more generic\n      // and move the logic in clerk/backend\n      if (requestState.headers) {\n        requestState.headers.forEach((value, key) => {\n          handlerResult.headers.append(key, value);\n        });\n      }\n\n      if (isRedirect(handlerResult)) {\n        logger.debug('handlerResult is redirect');\n        return serverRedirectWithAuth(clerkRequest, handlerResult, options);\n      }\n\n      if (options.debug) {\n        setRequestHeadersOnNextResponse(handlerResult, clerkRequest, { [constants.Headers.EnableDebug]: 'true' });\n      }\n\n      decorateRequest(clerkRequest, handlerResult, requestState, resolvedParams);\n\n      return handlerResult;\n    });\n\n    // If we have a request and event, we're being called as a middleware directly\n    // eg, export default clerkMiddleware;\n    if (request && event) {\n      return nextMiddleware(request, event);\n    }\n\n    // Otherwise, return a middleware that can be called with a request and event\n    // eg, export default clerkMiddleware(auth => { ... });\n    return nextMiddleware;\n  });\n};\n\nconst parseRequestAndEvent = (args: unknown[]) => {\n  return [args[0] instanceof Request ? args[0] : undefined, args[0] instanceof Request ? args[1] : undefined] as [\n    NextMiddlewareRequestParam | undefined,\n    NextMiddlewareEvtParam | undefined,\n  ];\n};\n\nconst parseHandlerAndOptions = (args: unknown[]) => {\n  return [\n    typeof args[0] === 'function' ? args[0] : undefined,\n    (args.length === 2 ? args[1] : typeof args[0] === 'function' ? {} : args[0]) || {},\n  ] as [ClerkMiddlewareHandler | undefined, ClerkMiddlewareOptions | ClerkMiddlewareOptionsCallback];\n};\n\ntype AuthenticateRequest = Pick<ClerkClient, 'authenticateRequest'>['authenticateRequest'];\n\nexport const createAuthenticateRequestOptions = (\n  clerkRequest: ClerkRequest,\n  options: ClerkMiddlewareOptions,\n): Parameters<AuthenticateRequest>[1] => {\n  return {\n    ...options,\n    ...handleMultiDomainAndProxy(clerkRequest, options),\n  };\n};\n\nconst createMiddlewareRedirectToSignIn = (\n  clerkRequest: ClerkRequest,\n): ClerkMiddlewareAuthObject['redirectToSignIn'] => {\n  return (opts = {}) => {\n    const url = clerkRequest.clerkUrl.toString();\n    redirectToSignInError(url, opts.returnBackUrl);\n  };\n};\n\nconst createMiddlewareProtect = (\n  clerkRequest: ClerkRequest,\n  authObject: AuthObject,\n  redirectToSignIn: RedirectFun<Response>,\n) => {\n  return (async (params: any, options: any) => {\n    const notFound = () => nextjsNotFound();\n\n    const redirect = (url: string) =>\n      nextjsRedirectError(url, {\n        redirectUrl: url,\n      });\n\n    return createProtect({ request: clerkRequest, redirect, notFound, authObject, redirectToSignIn })(params, options);\n  }) as unknown as Promise<AuthProtect>;\n};\n\n// Handle errors thrown by protect() and redirectToSignIn() calls,\n// as we want to align the APIs between middleware, pages and route handlers\n// Normally, middleware requires to explicitly return a response, but we want to\n// avoid discrepancies between the APIs as it's easy to miss the `return` statement\n// especially when copy-pasting code from one place to another.\n// This function handles the known errors thrown by the APIs described above,\n// and returns the appropriate response.\nconst handleControlFlowErrors = (e: any, clerkRequest: ClerkRequest, requestState: RequestState): Response => {\n  if (isNextjsNotFoundError(e)) {\n    // Rewrite to a bogus URL to force not found error\n    return setHeader(\n      NextResponse.rewrite(`${clerkRequest.clerkUrl.origin}/clerk_${Date.now()}`),\n      constants.Headers.AuthReason,\n      'protect-rewrite',\n    );\n  }\n\n  if (isRedirectToSignInError(e)) {\n    return createRedirect({\n      redirectAdapter,\n      baseUrl: clerkRequest.clerkUrl,\n      signInUrl: requestState.signInUrl,\n      signUpUrl: requestState.signUpUrl,\n      publishableKey: requestState.publishableKey,\n    }).redirectToSignIn({ returnBackUrl: e.returnBackUrl });\n  }\n\n  if (isNextjsRedirectError(e)) {\n    return redirectAdapter(e.redirectUrl);\n  }\n\n  throw e;\n};\n"],"names":["request","event"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1018, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}